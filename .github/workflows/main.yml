name: Bogus CI/CD Pipeline

# There's is specific logic connected to the trigger events by exclusion: 
# (github.event_name != 'pull_request')
# When adding new events, make sure they conform to the logic
# or if needed, make appropriate changes to keep the logic consistent
on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    runs-on: windows-latest
    outputs:
      new_version: ${{ steps.tag_generator.outputs.new_version }}
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 50
      
      - name: Clean .NET cache
        id: clean_dotnet_cache
        shell: powershell
        run: |
          dotnet clean ./Source/Bogus.sln --configuration Release 
          dotnet nuget locals all --clear

      - name: Install .NET dependencies
        id: install_dotnet_dependencies
        shell: powershell
        run: dotnet tool restore

      # (github.event_name == 'push') is used for steps specifically involved in the Release Sequence
      - if: github.event_name == 'push'
        name: Bump release version and create release tag
        id: tag_generator
        uses: mathieudutour/github-tag-action@v5
        with: 
          github_token: ${{ secrets.REPO_ALL_TOKEN }}
          default_bump: false

      - name: Build project
        id: build_project
        shell: powershell
        run: dotnet fake run Source\Builder\build.fsx target ci
        env:
          FORCE_VERSION: ${{ steps.tag_generator.outputs.new_version }}

      - if: github.event_name == 'push'
        name: Upload package artifact
        id: up_package_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: __package/

      - name: Run project tests
        id: run_project_tests
        shell: powershell
        run: dotnet fake run Source\Builder\build.fsx target test

      - if: github.event_name == 'push'
        name: Upload package artifact
        id: up_test_results_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: TestResults
          path: __test/

  cd:
    # "This job will execute when the workflow is triggered on a 'push event', the target branch is 'master' and the commit is intended to be a release."
    if: github.event_name == 'push' && needs.ci.outputs.new_version != ''
    needs: ci
    runs-on: windows-latest
    env:
      NEW_VERSION: ${{ needs.ci.outputs.new_version }}
      NEW_TAG: v${{ needs.ci.outputs.new_version }}
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2

      - name: Download and extract package artifact
        id: dl_package_artifact
        uses: actions/download-artifact@v2
        with:
          name: Package
          path: __package/

      - name: Download and extract test results artifact
        id: dl_test_results_artifact
        uses: actions/download-artifact@v2
        with:
          name: TestResults
          path: __test/

      - name: Create and publish release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: "[CHANGE LOG](HISTORY.md)"

      - name: Upload Bogus.zip as release asset
        id: upload_bogus_zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __package/Bogus.zip
          asset_name: Bogus.zip
          asset_content_type: application/zip

      - name: Upload Bogus.snupkg as release asset
        id: upload_bogus_snupkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __package/Bogus.${{ env.NEW_VERSION }}.snupkg
          asset_name: Bogus.${{ env.NEW_VERSION }}.snupkg
          asset_content_type: application/snupkg

      - name: Upload Bogus.nupkg as release asset
        id: upload_bogus_nupkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __package/Bogus.${{ env.NEW_VERSION }}.nupkg
          asset_name: Bogus.${{ env.NEW_VERSION }}.nupkg
          asset_content_type: application/nupkg

      - name: Upload internal test results as release asset
        id: upload_internal_test_results
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: __test/results.xml
          asset_name: results.xml
          asset_content_type: application/xml
